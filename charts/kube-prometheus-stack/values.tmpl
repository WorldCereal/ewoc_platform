alertmanager:
  enabled: true
  apiVersion: v2
  ingress:
    enabled: false

  alertmanagerSpec:
    nodeSelector:
      system-tag: world-cereal-system

grafana:
  enabled: true
  defaultDashboardsEnabled: true

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard

  additionalDataSources: 
  - name: Thanos
    type: prometheus
    access: proxy
    url: http://thanos-query:9090
    editable: true
    jsonData:
        tlsSkipVerify: true

  persistence:
    enabled: false

  ingress:
    enabled: false

  grafana.ini:
    log:
      mode: "console"
      level: "debug"
    log.frontend:
      enabled: true
    server:
      domain: grafana.VALUE_HOSTNAME
      root_url: https://grafana.VALUE_HOSTNAME/
    auth:
      oauth_auto_login: true
      disable_login_form: true
      signout_redirect_url: https://auth.VALUE_HOSTNAME/realms/worldcereal/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fgrafana.VALUE_HOSTNAME

    auth.generic_oauth:
      enabled: true
      tls_skip_verify_insecure: true
      allow_sign_up: true
      client_id: grafana
      scopes: email openid
      auth_url: https://auth.VALUE_HOSTNAME/realms/worldcereal/protocol/openid-connect/auth
      token_url: https://auth.VALUE_HOSTNAME/realms/worldcereal/protocol/openid-connect/token
      api_url: https://auth.VALUE_HOSTNAME/realms/worldcereal/protocol/openid-connect/userinfo
      role_attribute_path: contains(groups[*], 'ewoc_platform_admin') && 'Admin' || contains(groups[*], 'ewoc_admin') && 'Admin' || 'Viewer'
      client_secret: GRAFANA_CS

    database:
      type: postgres
      host: pgsqlha-pgpool.sysdb.svc.cluster.local
      user: postgres
      password: PG_PASS
      port: 5432
      name: grafana

    remote_cache:
      type: database

    unified_alerting:
      enabled: true
      ha_peers: kube-prometheus-stack-grafana-headless:3000
  
  nodeSelector:
    system-tag: world-cereal-system

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name 
              operator: In
              values:
              - grafana
          topologyKey: kubernetes.io/hostname

  replicas: 1
  headlessService: true

prometheus:
  enabled: true
  disableCompaction: true

  thanosService:
    enabled: true

  thanosServiceMonitor:
      enabled: true
      interval: 2m

  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: true
    serviceMonitorSelectorNilUsesHelmValues: true
    serviceMonitorSelector:
      matchLabels:
        release: kube-prometheus-stack
    nodeSelector:
      system-tag: world-cereal-system

    retention: 12h
    scrapeInterval: 2m

    thanos:
      objectStorageConfig:
        key: objstore.yml
        name: thanos-objstore-config
      resources:
        limits:
          cpu: 100m
          memory:  2Gi
        requests:
          cpu: 25m
          memory: 512Mi

    storageSpec: 
     volumeClaimTemplate:
       spec:
         accessModes: ["ReadWriteOnce"]
         resources:
           requests:
             storage: 30Gi

    replicas: 2

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name 
              operator: In
              values:
              - prometheus
          topologyKey: kubernetes.io/hostname

    resources:
      limits:
        memory: 16000Mi
      requests:
        memory: 4096Mi

  ingress:
    enabled: false

prometheusOperator:
  enabled: true
  hostNetwork: false        
  nodeSelector:
    system-tag: world-cereal-system

kubelet:
  enabled: true
  namespace: kube-system
  serviceMonitor:
    resource: true