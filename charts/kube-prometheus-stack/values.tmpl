
alertmanager:
  enabled: true
  apiVersion: v2
  ingress:
    enabled: false
    ingressClassName: kong
    annotations:
      #kubernetes.io/ingress.class: kong
      konghq.com/strip-path: "false"
    
    hosts: 
      - alertmanager.VALUE1
    path: /
    pathType: ImplementationSpecific


  
grafana:
  enabled: true
  defaultDashboardsEnabled: true
  adminPassword: c25hcGVhcnRoMjAyMQo=
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard

      annotations: {}

  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: kong
      konghq.com/strip-path: "false"
    
    hosts: 
      - grafana.VALUE1
    path: /

prometheus:
  enabled: true
  
  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: true
    serviceMonitorSelectorNilUsesHelmValues: true
    serviceMonitorSelector:
      matchLabels:
        release: kube-prometheus-stack

  ingress:
    enabled: true

    # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    ingressClassName: kong

    annotations: 
      konghq.com/strip-path: "false"
      kubernetes.io/ingress.class: kong
    hosts: 
      - prometheus.VALUE1
    paths: 
      - /
    pathType: ImplementationSpecific  
   

prometheusOperator:
  enabled: true
  hostNetwork: false        
  

kubelet:
  enabled: true
  namespace: kube-system
  serviceMonitor:
    ## Enable scraping /metrics/resource from kubelet's service
    ## This is disabled by default because container metrics are already exposed by cAdvisor
    ##
    resource: true
